name: Build and test - run on arch action

on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - develop
      - feature/aarch64-checks
  schedule:
    # 03:00 every Saturday morning
    - cron: '0 3 * * 6'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  linux:
    name: Build and test (Linux)
    runs-on: ubuntu-20.04
    env:
      CC: gcc-10
      CXX: g++-10
      CONAN_REVISIONS_ENABLED: 1
      PYTKET_SKIP_REGISTRATION: "true"
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Get current time
      uses: srfrnk/current-time@v1.1.0
      id: current_time
      with:
        format: YYYYMMDDHHmmss
    - name: Cache ccache data
      uses: actions/cache@v3
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-tket-ccache-${{ steps.current_time.outputs.formattedTime }}
        restore-keys: |
          ${{ runner.os }}-tket-ccache-
    - name: apt update
      run: sudo apt update
    - name: Check doxygen
      if: github.event_name == 'pull_request'
      run: |
        sudo apt install -y doxygen graphviz
        cd tket && doxygen
    - name: Install conan
      id: conan
      run: |
        pip install conan
        conan_cmd=/home/runner/.local/bin/conan
        ${conan_cmd} profile new tket --detect
        ${conan_cmd} profile update settings.compiler.libcxx=libstdc++11 tket
        ${conan_cmd} profile update options.tklog:shared=True tket
        ${conan_cmd} profile update options.tket:shared=True tket
        echo "CONAN_CMD=${conan_cmd}" >> $GITHUB_ENV
    - name: set option to run full test suite
      if: github.event_name == 'schedule'
      run: ${CONAN_CMD} profile update options.tket-tests:full=True tket
    - name: add remote
      run: ${CONAN_CMD} remote add tket-libs https://quantinuumsw.jfrog.io/artifactory/api/conan/tket1-libs
    - name: Install ninja and ccache
      run: sudo apt-get install ninja-build ccache
    - name: Build tket
      run: ${CONAN_CMD} create --profile=tket recipes/tket
    - name: Install runtime test requirements
      run: |
        sudo apt-get install texlive texlive-latex-extra latexmk
        mkdir -p ~/texmf/tex/latex
        wget http://mirrors.ctan.org/graphics/pgf/contrib/quantikz/tikzlibraryquantikz.code.tex -P ~/texmf/tex/latex
    - name: Build and run tket tests
      run: ${CONAN_CMD} create --profile=tket recipes/tket-tests
    - name: Build and run tket proptests
      run: ${CONAN_CMD} create --profile=tket recipes/tket-proptests
    - name: Install pybind11
      run: ${CONAN_CMD} create --profile=tket recipes/pybind11
    - name: Set up Python 3.8
      if: github.event_name == 'push'
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    - name: Build pytket (3.8)
      if: github.event_name == 'push'
      run: |
        cd pytket
        pip install -e . -v
    - name: Test pytket (3.8)
      if: github.event_name == 'push'
      run: |
        cd pytket/tests
        pip install -r requirements.txt
        pytest --ignore=simulator/ --doctest-modules --cov=../pytket --cov-branch --cov-report=html --cov-report=xml:htmlcov/cov.xml
    - name: Set up Python 3.9
      if: github.event_name == 'pull_request'
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: Build pytket (3.9)
      if: github.event_name == 'pull_request'
      run: |
        cd pytket
        pip install -e . -v
    - name: Test building docs
      if: github.event_name == 'pull_request'
      timeout-minutes: 20
      run: |
        pip install -r pytket/docs/requirements.txt
        ./.github/workflows/build-docs
    - name: Test pytket (3.9)
      if: github.event_name == 'pull_request'
      run: |
        cd pytket/tests
        pip install -r requirements.txt
        pytest --ignore=simulator/ --doctest-modules --cov=../pytket --cov-branch --cov-report=html --cov-report=xml:htmlcov/cov.xml
    - name: Set up Python 3.10
      if: github.event_name == 'schedule'
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Build pytket (3.10)
      if: github.event_name == 'schedule'
      run: |
        cd pytket
        pip install -e . -v
    - name: Test pytket (3.10)
      if: github.event_name == 'schedule'
      run: |
        cd pytket/tests
        pip install -r requirements.txt
        pytest --ignore=simulator/ --doctest-modules
    - name: Upload pytket coverage artefact
      if: github.event_name == 'pull_request' || github.event_name == 'push'
      uses: actions/upload-artifact@v3
      with:
        name: pytket_test_coverage
        path: pytket/tests/htmlcov


  arch:
    name: Build and test (arch)
    runs-on: ubuntu-20.04
    env:
      CC: gcc-10
      CXX: g++-10
      CONAN_REVISIONS_ENABLED: 1
      PYTKET_SKIP_REGISTRATION: "true"
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Get current time
      uses: srfrnk/current-time@v1.1.0
      id: current_time
      with:
        format: YYYYMMDDHHmmss
    - name: Cache ccache data
      uses: actions/cache@v3
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-tket-ccache-${{ steps.current_time.outputs.formattedTime }}
        restore-keys: |
          ${{ runner.os }}-tket-ccache-
    - name: apt update
      run: sudo apt update
    - name: Check doxygen
      if: github.event_name == 'pull_request'
      run: |
        sudo apt install -y doxygen graphviz
        cd tket && doxygen
    - name: Install conan
      id: conan
      run: |
        pip install conan
        conan_cmd=/home/runner/.local/bin/conan
        ${conan_cmd} profile new tket --detect
        ${conan_cmd} profile update settings.compiler.libcxx=libstdc++11 tket
        ${conan_cmd} profile update options.tklog:shared=True tket
        ${conan_cmd} profile update options.tket:shared=True tket
        echo "CONAN_CMD=${conan_cmd}" >> $GITHUB_ENV
    - name: set option to run full test suite
      if: github.event_name == 'schedule'
      run: ${CONAN_CMD} profile update options.tket-tests:full=True tket
    - name: add remote
      run: ${CONAN_CMD} remote add tket-libs https://quantinuumsw.jfrog.io/artifactory/api/conan/tket1-libs
    - name: Install ninja and ccache
      run: sudo apt-get install ninja-build ccache
    - name: Build tket
      run: ${CONAN_CMD} create --profile=tket recipes/tket
    - name: Install runtime test requirements
      run: |
        sudo apt-get install texlive texlive-latex-extra latexmk
        mkdir -p ~/texmf/tex/latex
        wget http://mirrors.ctan.org/graphics/pgf/contrib/quantikz/tikzlibraryquantikz.code.tex -P ~/texmf/tex/latex
    - name: Build and run tket tests
      run: ${CONAN_CMD} create --profile=tket recipes/tket-tests
    - name: Build and run tket proptests
      run: ${CONAN_CMD} create --profile=tket recipes/tket-proptests
    - name: Install pybind11
      run: ${CONAN_CMD} create --profile=tket recipes/pybind11
    - name: Set up Python 3.8
      if: github.event_name == 'push'
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    - name: Build pytket (3.8)
      if: github.event_name == 'push'
      run: |
        cd pytket
        pip install -e . -v
    - name: Test pytket (3.8)
      if: github.event_name == 'push'
      run: |
        cd pytket/tests
        pip install -r requirements.txt
        pytest --ignore=simulator/ --doctest-modules --cov=../pytket --cov-branch --cov-report=html --cov-report=xml:htmlcov/cov.xml
    - name: Set up Python 3.9
      if: github.event_name == 'pull_request'
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: Build pytket (3.9)
      if: github.event_name == 'pull_request'
      run: |
        cd pytket
        pip install -e . -v
    - name: Test building docs
      if: github.event_name == 'pull_request'
      timeout-minutes: 20
      run: |
        pip install -r pytket/docs/requirements.txt
        ./.github/workflows/build-docs
    - name: Test pytket (3.9)
      if: github.event_name == 'pull_request'
      run: |
        cd pytket/tests
        pip install -r requirements.txt
        pytest --ignore=simulator/ --doctest-modules --cov=../pytket --cov-branch --cov-report=html --cov-report=xml:htmlcov/cov.xml
    - name: Set up Python 3.10
      if: github.event_name == 'schedule'
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Build pytket (3.10)
      if: github.event_name == 'schedule'
      run: |
        cd pytket
        pip install -e . -v
    - name: Test pytket (3.10)
      if: github.event_name == 'schedule'
      run: |
        cd pytket/tests
        pip install -r requirements.txt
        pytest --ignore=simulator/ --doctest-modules
    - name: Upload pytket coverage artefact
      if: github.event_name == 'pull_request' || github.event_name == 'push'
      uses: actions/upload-artifact@v3
      with:
        name: pytket_test_coverage
        path: pytket/tests/htmlcov
